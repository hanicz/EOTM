#Install docker, docker-compose on rpi
sudo curl -fsSL https://get.docker.com | sh
sudo usermod -aG docker [user]
sudo apt install docker-compose -y

#Build for other platform (set experimental to true in settings)
docker buildx build --load --platform linux/arm/v7 -t thanicz/rpi .

#Digital ocean
docker login
docker buildx build --load --platform linux/amd64 -t thanicz/eotm:2.3 .
docker push thanicz/eotm:2.3
docker pull thanicz/eotm:2.3
docker images
docker image rm {id}
Modify docker-compose.yml with new tag

#Save image locally
docker save --output rpi.tar docker.io/thanicz/rpi:lastest

#Run
docker-compose up
docker-compose up -d //run in background

#Existing containers
docker ps

#Bash into container
docker exec -it <container_id> bash
psql -d <db_name> -U <user>


#Renew certbot
allow 80 on digitalOcean UI
sudo ufw allow 80
sudo certbot renew
sudo ufw deny 80
deny 80 on digitalOcean UI
add new cert files to nginx.conf


#docker
docker build --build-arg JAR_FILE=*.jar -t thanicz/demo .
docker build -t thanicz/demo .
docker run -p 8080:8080 thanicz/demo